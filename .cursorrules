# Cursor Rules for Customify Shopify App

## Environment Variables Status
- All Vercel environment variables are properly configured
- SHOPIFY_ACCESS_TOKEN is set in Vercel Dashboard
- Do NOT ask about environment variables configuration
- Do NOT ask about Vercel Dashboard settings
- Do NOT ask about token values or setup

## Current Project Status
- Shopify app is installed and working
- OAuth flow is complete
- App has proper permissions in Shopify
- Vercel deployment is functional

## Debugging Focus
- Focus on code issues, not environment setup
- Check function logic and implementation
- Look for runtime errors or logic problems
- Verify API calls and responses

## Key Files
- api/status.js - App status checker
- api/test.js - Environment variables test
- api/install.js - OAuth installation
- api/products.js - Product creation and cart management
- api/transform.js - AI image transformation
- public/shopify-embed.html - Main UI and cart integration
- public/shopify-script.js - Shopify theme integration
- vercel.json - Vercel configuration

## Project Goal
Customify is a Shopify app that allows customers to:
1. Upload their own photos on product pages
2. Use AI (Replicate API) to transform/modify the photos with various styles
3. Preview the AI-modified image
4. Add the customized product to cart for printing
5. Pay for the physical printed version

## Product Customization Logic
- **Original product** = only template/example image
- **Final product** = user's photo transformed by AI in selected style
- **Price depends on size** (small, medium, large, xlarge)
- **User pays for physical print** of their AI-transformed photo
- **Process**: Upload → Select style → Select size → AI transform → Create new product → Add to cart
- **For store**: Order contains AI image for printing + original user photo + style/size info

## Communication Rules
- If you have doubts about requirements, ASK QUESTIONS before implementing
- Always clarify the exact business logic before writing code
- Focus on understanding the complete user journey before coding
- User explicitly stated: NO MORE PASSWORD SUGGESTIONS - user doesn't want password solutions, stop proposing password-related fixes
- User confirmed: NO UPGRADE OPTION in Billing - don't ask about upgrade options anymore
- User explicitly stated: NO CREATING NEW PRODUCTS - don't propose creating new products anymore, use existing product with properties

## Common Issues to Check
- Function syntax and exports
- API endpoint routing
- Error handling in functions
- Response formatting
- CORS configuration

## Recent Fixes (December 2024)
### Cart Add Functionality Fix
- **Problem**: `net::ERR_FAILED` and `TypeError: Failed to fetch` when adding products to cart
- **Root Cause**: ID mismatch between created product and cart add request + CORS issues with fetch()
- **Solution**: 
  - Added detailed logging in `api/products.js` to debug Shopify API responses
  - Changed cart add method from `fetch()` to `window.location.href` to avoid CORS
  - Added `productId` to API response for better debugging
  - Simplified cart add process to prevent network errors
- **Files Modified**: `api/products.js`, `public/shopify-embed.html`
- **Status**: ✅ Fixed and deployed

### Cart Integration Details
- **Method**: Direct navigation to cart URL instead of fetch requests
- **URL Format**: `https://{shop}/cart/add?id={variantId}&quantity=1&properties[...]`
- **Properties**: Original Image, AI Style, Original Product, Customization Type
- **Variant ID**: Use `product.variants[0].id` from Shopify API response
- **Product ID**: Use `product.id` for reference (not for cart add)

### Debugging Tips
- Check browser console for detailed logs with `[PRODUCTS.JS]` and `[SHOPIFY-EMBED.HTML]` prefixes
- Verify variant ID vs product ID usage
- Monitor network tab for failed requests
- Use direct navigation instead of fetch for cart operations

### Deployment Process
- **ALWAYS push changes to GitHub after fixes**
- Use `git add . && git commit -m "description" && git push origin main`
- Vercel automatically deploys from GitHub
- Test changes on live site after deployment
- Update cursor rules with new fixes and learnings
