# Cursor Rules for Customify Shopify App

## Environment Variables Status
- All Vercel environment variables are properly configured
- SHOPIFY_ACCESS_TOKEN is set in Vercel Dashboard
- Do NOT ask about environment variables configuration
- Do NOT ask about Vercel Dashboard settings
- Do NOT ask about token values or setup

## Current Project Status
- Shopify app is installed and working
- OAuth flow is complete
- App has proper permissions in Shopify
- Vercel deployment is functional

## Debugging Focus
- Focus on code issues, not environment setup
- Check function logic and implementation
- Look for runtime errors or logic problems
- Verify API calls and responses

## Key Files
- api/status.js - App status checker
- api/test.js - Environment variables test
- api/install.js - OAuth installation
- vercel.json - Vercel configuration

## Project Goal
Customify is a Shopify app that allows customers to:
1. Upload their own photos on product pages
2. Use AI (Replicate API) to transform/modify the photos with various styles
3. Preview the AI-modified image
4. Add the customized product to cart for printing
5. Pay for the physical printed version

## Product Customization Logic
- **Original product** = only template/example image
- **Final product** = user's photo transformed by AI in selected style
- **Price depends on size** (small, medium, large, xlarge)
- **User pays for physical print** of their AI-transformed photo
- **Process**: Upload → Select style → Select size → AI transform → Create new product → Add to cart
- **For store**: Order contains AI image for printing + original user photo + style/size info

## Communication Rules
- If you have doubts about requirements, ASK QUESTIONS before implementing
- Always clarify the exact business logic before writing code
- Focus on understanding the complete user journey before coding

## Common Issues to Check
- Function syntax and exports
- API endpoint routing
- Error handling in functions
- Response formatting
- CORS configuration
